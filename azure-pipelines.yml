# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
      displayName: Terraform installer
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
        backendAzureRmUseEntraIdForAuthentication: true
        backendServiceArm: 'Alok Subscription 2(11b69d83-0d2c-46de-9f6d-04236e960d4e)'
        backendAzureRmResourceGroupName: 'terraform_rg01'
        backendAzureRmStorageAccountName: 'terraformstate2015'
        backendAzureRmContainerName: 'tfcontainer01'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTaskV4@4
      displayName: Terraform Validate
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
    
    - task: TerraformTaskV4@4
      displayName: Terraform format
      inputs:
        provider: 'azurerm'
        command: 'custom'
        workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
        outputTo: 'console'
        customCommand: 'fmt'
        environmentServiceNameAzureRM: 'Alok Subscription 2(2)(11b69d83-0d2c-46de-9f6d-04236e960d4e)'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
        environmentServiceNameAzureRM: 'devopsserviceconnection1000'
    
    - task: CopyFiles@2
      displayName: Copy files
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Artifacts-terraform'
        publishLocation: 'Container'
      